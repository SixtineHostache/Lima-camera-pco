#===================================================
#===================================================
# LOGS / NOTES
#===================================================
#===================================================

#===================================================
# 2016/05/20
# update the working test version with usb3 / pco edge gold
#===================================================

- test running version 
   comp[2015/12/11 13:17:57] file[2015/12/11 13:16:45] [..\..\..\..\src\PcoCamera.cpp]
   install-2015-12-11_131825

   Branches: develop_02, remotes/github/develop_02
   d2f1fe0cd12ab1c3433d6960bd73c7e1078865e7
   2015-12-11 14:26:34


#===================================================
# 2016/05/19
# blissinstaller package
#===================================================

temporary patch on the core to fix the max lim of mem in 
accumulation mode

------------------------ control/src/CtAccumulation.cpp ------------------------
index 99e11b4..262d1b3 100644
@@ -528,6 +528,10 @@ void CtAccumulation::prepare()
   m_saturated_images.clear();
   CtBuffer *buffer = m_ct.buffer();
   buffer->getNumber(m_buffers_size);
+
+  //----- patch for acc mode 32 bit - 16
+  if(m_buffers_size > 10) m_buffers_size /= 2;
+
   CtAcquisition *acquisition = m_ct.acquisition();
   int acc_nframes;
   acquisition->getAccNbFrames(acc_nframes);
   

#===================================================
# 2016/05/18
# pco 4000 camera / usb2 - FRAME RATE
#===================================================

- in the case of pco 4000, the size is 4008*2672, pco 2000 is  (2048*2048)
  so it will take about 50 * (4008*2672)/(2048*2048) = 128 ms to transfer the image to the DDR.
- the transfer with usb2 will be about 480 Mbps -> 48 MB/s 
- the image size is (4008*2672) * 2 = 21418752B -> 446 ms (usb comm)
- so the complete image transfer will be at 21.418752/(.446 + .128) = 37 MB/s -> 1.74 fps

* dwSerialNumber[2094]
* wCamType[260] wCamSubType[0] [PCO 4000]
* wInterfaceType[3]  [USB]
VS configuration: platform[x64] configuration[Release]
 PCO SDK version: file[sc2_cam.dll] ver[1,18,0,316 /Increv: 399 / Date: 2014/10/01 17:03:28]
* ADC wADCOperation[2] wNumADCsDESC[2]
* pixelRate[32000000](32 MHz)
* imgSize[10709376 px][21418752 B][20.4265 MB]
* bitsPerPix[14] bytesPerPix[2]
* cocRunTime[0.202467] (s) frameRate[4.93907] (fps)
* imgSize[21418752 B] totSize[2141875200 B][2042.65 MB] xferSpeed[38.2741 MB/s][1.87375 fps]
* nrImgRequested0[100] nrImgRequested[100] nrImgAcquired[100] nrImgRecorded[101] maxImgCount[250]
* ... usTicks[6][52813.752] (ms)   (PCO_GetImageEx / API total execTime)
* msImgCoc[202] fps[4.94] msTout[26320] msTotal[74043]
* msExposure[100] msDelay[0]


#===================================================
# 2016/04/13
# pco 2000 camera - FRAME RATE
#===================================================

nrFrames[100]
exp[0.001] delay[0] (s)
roi PCO X(1,2048) Y(1,2048) size(2048,2048)
ADC: working[2]
pixel rate: 40000000 Hz
cocRunTime: 0.0682261 s
frameRate: 14.6571 f/s

- sequence mode recording

that is
- record in the cam memory
- when it finishes, transfer the images to lima

- the record phase is ok

rec[6980] ms <- recording time 101 * coc = 0.0682261 OK

cocRunTime: 0.0682261 s
frameRate: 14.6571 f/s

- the framerate of the acquisition in the cam memory, is NOT the final framerate of the 
readout!

the transfer speed from the camera to lima is low, similar the one you 
reported

xfer[31561] <- 31.5 s -> about 3 frames/s (!!!)

the GigE connection is ok. i get with GigECalib V1,4,0,50
Test succeeded with a maxium datathoughput of 68 MB/sec

the net speed is 68 instead of 100 MB/s, because it takes about 50ms to 
transfer the img to the ddr, and 80ms the transmission at 100 MB/s,
that is the eth link has a net duty of about 80/130 -> 0.61 -> 61 MB/s 
-> 68 MB/s

the image of 2048*2048 is about 8MB -> 8 images/s, associated to the 
GigE communication ...

i tested the time of the API call, that is, counting the time just 
between before/after the call PCO_GetImageEx
* ... usTicks[5][31112.084] (ms)   (PCO_GetImageEx only)

and the rest of time, copy to lima and lima processing is
* ... usTicks[7][315.822] (ms)   (xfer to lima / total execTime)

that is the GigE reduces the speed from about 14.6 f/s to 8 but the api 
reduces this to about 3.1


#===================================================
# 2016/04/01
# from Paul / id17
#===================================================
  Yes, the server crashes, and then has to be restarted, and the frame corresponding to the crash is exactly at 
  64Gb. the error message on the windows machine is linked to the memory saturation. 
  If the size of the complete scan is lower, then it works fine, but 64 Gb is a rather small size for a scan 
  with half-acquisition.

  We are currently doing an experiment on ID17 with the PCO edge. (new 64 bits version)
  We had series of crashes, they happen when the size of the scan is more than 64 Gb. 
  During the scan, the memory is constantly increasing and is released only at the end
  once it reaches the total RAM (64Gb) everything crashes.
  
  - the fix of the memory in the 32b release / core 1.3 2014/03/07
  was changed
  
  - Manu included this during setup
    def ftomoccdsetup '{
    # buffer max memory
    _limapar_set(ccd_name, "buffer_max_memory", ccd_maxmem)

  - included the property mem_factor (0 -100) in the pco device

  - test
  
  ---------------
       timestamp: 2016/04/01 16:31:52
   computer name: ISG-PCO2K2
       user name: opid00
VS configuration: platform[x64] configuration[Release]

=================================================
   mem_factor: org[70] req[50] now[50]
=================================================
--------------- 


#===================================================
# 2015-09-10 18:18:10
# 4d5d8a8e401ac445911fd86d22adb7442b68d8fd 
# Tags: pco-win64-1.4.1
#===================================================
# including the platform and the configuration
#===================================================

PreprocessorDefinitions= VS_PLATFORM=$(PlatformName);VS_CONFIGURATION=$(ConfigurationName);
liblimapco -> properties -> c/c++ -> preprocessor -> preprocessor definitions:

   VS_PLATFORM=$(PlatformName)
   VS_CONFIGURATION=$(ConfigurationName)

the macro $(PlatformName) is Win32 or x64
the macro $(ConfigurationName) is Release_Win7_Sync or Release

PreprocessorDefinitions= VS_PLATFORM=$(PlatformName);VS_CONFIGURATION=$(ConfigurationName);

the preprocessor change these values to strings:

   #define Win32				"Win32"
   #define x64					"x64"
   #define Release_Win7_Sync	"Release_Win7_Sync"
   #define Release				"Release"

then we can use in:

	sprintf_s(infoBuff, bufCharCount, "platform[%s] configuration[%s]",  
		VS_PLATFORM,
		VS_CONFIGURATION); 


#===================================================
# 2015/06/22
  - changed the repository for lima/win
    /segfs/bliss/projects/LIMA/build/depot_win
    /segfs/bliss/projects/LIMA/build/depot_win/win32_vc9/pco

#===================================================
# 2014/09/19
  - when tested without cam python error in fglib5.dll (not found) 
  -- included in cameralink RuntimeSetup_v5.1.4_IA32.exe 
  -- installed ok

#===================================================
# 2014/08/13
  - cleaned test modules xferMulti, ...
  -- before clean: f01ad1f9f36714855a5e8a6c9221866ad00e2f6c

#===================================================
# 2014/08/13
  - stop -> stop recording -> xfer to lima
  -- afer 5 stops -> stop xfer to lima

#===================================================
# 2014/08/1 ... /12 
  - hw rois
  - talk / lastImgRecorded
  - s/n
  - debug, minor, cosmetics ...

#===================================================
# 2014/05/18 
  - clean

#===================================================
# 2013/03/21
  - fixes and pull request #1 from Solei
  - WITH_GIT_VERSION and move .sln to build
  
#===================================================
# 2013/03/17
  - working with DIMAX to save in lima the recorded frames if an acqStop is received during
    the record

#===================================================
# 2013/03/13
  - include line & file in Pco check error
  - set compatibility of nr ADC between dimax (1) and pco4k (2)
  - add - HwEventCtrlObj

#===================================================
# 2014/03/12  
  wid15dimax2 merge with limace
     pco pco-1.3.1a - b8367b29953a43e718b017b8ed08930ca9e709a2
     lima - 75038daab2305b1da2a2af1aeef7ced312d105e6
     
#===================================================
# 2014/03/10  
 lima tag pco-1.3.0 (limace)  
   lima - tag pco-1.3.0 - 75038daab2305b1da2a2af1aeef7ced312d105e6
   pco - branch pco-1.3.0 - a1a1cfdff4d7e113cefd53bd8353dd56157dd889

   --- test references - not used
   lima - core 1.3.2 - 56b4036c74ee0c6c78a1904b8ef7e1c697da934c
   lima - core 1.3 - 75038daab2305b1da2a2af1aeef7ced312d105e6

#===================================================
# 2014/03/07  
 update actual release to package with version / tag
   lima - 5d95d2bdf27a987ec010bb88e7105a2f73a343fe

#===================================================
# rh 2014/03/07 - e0b4707bd3b131a0c49eae0a4b47814ce2d41fa0

Lima/common/src/MemUtils.cpp

int lima::GetDefMaxNbBuffers(const FrameDim& frame_dim, double sys_mem_factor)

	if (sys_mem_factor == 0)
		sys_mem_factor = 0.8;   <----- changed to 0.7



#===================================================
#===================================================
# NOTES
#===================================================
#===================================================


#=========================================================================
# script to extract the git hash id to PcoGitVersion.h
#    run it MANUALLY!
#=========================================================================

homsrego@WID00LIMACE ~/git/pco/Lima/camera/pco ((pco-1.3.2))
-rwxr-xr-x    1 homsrego Administ     1356 May 18 17:25 setId

$ ./setId
#define        PCO_GIT_VERSION "$Id:       PCO rev[2014-05-18 17:42:34 +0200] head[eb5c960][eb5c96053d06619b575323ebc915c109a68602c4] at [2014/05/18 18:08:38] $"
#define       LIMA_GIT_VERSION "$Id:      LIMA rev[2014-03-31 09:08:59 +0200] head[75d2def][75d2def73f0469c6c4a185381eb7b20509189bee] at [2014/05/18 18:08:38] $"
#define    PROCLIB_GIT_VERSION "$Id:   PROCLIB rev[2014-03-07 16:52:19 +0100] head[52a3557][52a3557a28917bfc8a3f03f3e35f6a1cb6515280] at [2014/05/18 18:08:38] $"
#define  LIBCONFIG_GIT_VERSION "$Id: LIBCONFIG rev[2013-02-07 18:08:29 +0100] head[89c411a][89c411a541d4ab4d66257ccb85749853fd685cbb] at [2014/05/18 18:08:38] $"



#===============================================================================
# blissinstaller packages
#===============================================================================
(blissadm)
NOT VALID - bestia:/segfs/bliss/projects/LIMA/build/depot/win32_vc9/pco %           

blissinstaler:
Control/Tango/Server/LimaCCDs-pco/win32_vc9/1.5

On 22/06/2015 16:49
> /segfs/bliss/projects/LIMA/build/depot_win
> /segfs/bliss/projects/LIMA/build/depot_win/win32_vc9/pco


#===============================================================================
#===============================================================================
# file .../Lima/README_WINDOW

# file .../notes/lima/README_WINDOW.txt

#===============================================================================
# Compilation of python Lima Modules for Windows
#
# use the special command prompt console to compile!!!
# start -> Programs -> MS visual c++ 2008 Express Edition 
#       -> visual studio tools -> VS 2008 Cmd Prompt
#===============================================================================
#------------------------------------------------------------------------
# Setting environment for using Microsoft Visual Studio 2008 x86 tools.
# C:\Program Files\Microsoft Visual Studio 9.0\VC>
# C:\Program Files\Microsoft Visual Studio 9.0\VC>limabase   <--- to go to lima home
# c:\Users\homsrego\git\pco\Lima>                            <---
#------------------------------------------------------------------------

************************************************
*** after test OK -> git commit -a
*** setId (header is modified with the new hash)
*** compile again
************************************************

  - first copy config.inc_default to config.inc
        limabase
        Lima>

  - configure config.inc
      COMPILE_CORE=1
      COMPILE_PCO=1

  - go to third-party\Processlib\sip
        limaproc
        cd sip
        Lima\third-party\Processlib\sip>
    
  - then run 
        Lima\third-party\Processlib\sip>

        python configure.py
        nmake clean
        nmake

  - then go back to Lima
        Lima\third-party\Processlib\sip>
        limabase
        Lima>
        
  - then run 
        python windowsSipCompilation.py --config

        python windowsSipCompilation.py

        python windowsInstall.py

        limacpins

********************************************************************************************
*** delete /tmp_14_days/rhoms1/install-beta
*** cpInstall - copy install to
***     /tmp_14_days/rhoms1/install-beta
***     /tmp_14_days/rhoms1/install-DT
***     blissadm@lid00a:/segfs/bliss/projects/LIMA/build/depot_win/win_vc9/pco/install-DT
********************************************************************************************

********************************************************************************************
blissdb: 
  cd /segfs/bliss/projects/LIMA/build/depot_win/win_vc9/pco
  mkdir pco-win64-1.4.5
  cp -r install-2016-03-31_134518/ pco-win64-1.4.5/install
********************************************************************************************

#===============================================================================
# For Linux platform, It's manage by the master Makefile
#===============================================================================
  - got to the Lima root project
  - then run make config
  - then run make -C sip -j3

#=========================================================================
# script to extract the git hash id to PcoGitVersion.h
#    run it MANUALLY!
#=========================================================================

homsrego@WID00LIMACE ~/git/pco/Lima/camera/pco ((pco-1.3.2))
-rwxr-xr-x    1 homsrego Administ     1356 May 18 17:25 setId

$ ./setId

#----------------------------------------------------------------------------
- include git version
  - enable this option with the preprocessor def WITH_GIT_VERSION
    if requiered may be set int the enviroment var CL instead of in the proyect:
       CL = /D WITH_GIT_VERSION
  - file ./include/PcoGitVersion.h
  - after commit -> run setID -> build again
#----------------------------------------------------------------------------


#===============================================================================
# debug flags
#===============================================================================
0x31 -> dateTime function fileLine
0x30 -> function fileLine

enum DebFormat {
	DebFmtDateTime		= 1 << 0,
	DebFmtThread		= 1 << 1,
	DebFmtModule		= 1 << 2,
	DebFmtObj		= 1 << 3,
	DebFmtFunct		= 1 << 4,	
	DebFmtFileLine		= 1 << 5,
	DebFmtType		= 1 << 6,
	DebFmtIndent		= 1 << 7,
	DebFmtColor		= 1 << 8,
};

#===============================================================================
# git / config
#===============================================================================
[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	symlinks = false
	ignorecase = true
	hideDotFiles = dotGitOnly
[remote "origin"]
	url = git@github.com:esrf-bliss/Lima.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[submodule "third-party/Processlib"]
	url = git@github.com:esrf-bliss/Processlib.git
[submodule "third-party/Sps"]
	url = git@github.com:esrf-bliss/Sps.git
[submodule "third-party/libconfig"]
	url = git@github.com:esrf-bliss/libconfig.git
[submodule "documentation"]
	url = git@github.com:esrf-bliss/Lima-documentation
[submodule "applications/spec"]
	url = git@github.com:esrf-bliss/Lima-spec
[submodule "applications/tango"]
	url = git@github.com:esrf-bliss/Lima-tango
[submodule "camera/pco"]
	url = git@github.com:esrf-bliss/Lima-camera-pco
[submodule "documentation"]
	url = git@github.com:esrf-bliss/Lima-documentation
[branch "core-1.4"]
	remote = origin
	merge = refs/heads/core-1.4



OPID15@WID15DIMAX2 /c/blissadm/git/pco/Lima/.git/modules/camera/pco (master)
$ cat config
[core]
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        worktree = ../../../../camera/pco
        symlinks = false
        ignorecase = true
        hideDotFiles = dotGitOnly
[remote "origin"]
        url = git@github.com:esrf-bliss/Lima-camera-pco   <---
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
        remote = origin
        merge = refs/heads/master

